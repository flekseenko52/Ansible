---
- name: Install nginx
  ansible.builtin.apt:
    upgrade: true
    update_cache: true
    cache_valid_time: 3600

- name: Install pakages
  ansible.builtin.apt:
    name: "{{ pakages }}"
    update_cache: true

- name: Configuration nginx config
  when: nginx_copy | bool
  block:
    - name: Deleting default config in "{{ nginx_available_dir}}"
      ansible.builtin.file:
        state: absent
        path: "{{ nginx_available_dir }}/default"

    - name: Deleting default config in "{{ nginx_enable_dir}}"
      ansible.builtin.file:
        state: absent
        path: "{{ nginx_enable_dir }}/default"

    - name: Copy Configuration
      ansible.builtin.copy:
        src: "{{ conf_src_dir }}"
        dest: "{{ nginx_available_dir }}"
        owner: root
        group: root
        mode: '0644'

    - name: Copy web-content
      ansible.builtin.copy:
        src: "{{ html_src_dir  }}"
        dest: "{{ html_dest_dir }}"
        owner: root
        group: root
        mode: '0644'
  
    - name: Create symbolic link
      ansible.builtin.file:
        src: "{{ nginx_available_dir }}/{{ domain_conf }}"
        dest: "{{nginx_enable_dir}}/{{ domain_conf }}"
        state: link

- name: Install SSL certs
  when: ssl_install | bool
  block:
    - name: Check Certs on proxy
      ansible.builtin.stat:
        path: /etc/letsencrypt/live/{{ domain_conf }}/fullchain.pem
      register: cert_exists

    - name: Output of cert
      ansible.builtin.debug:
        var: cert_exists

    - name: Creating SSL-Certs
      ansible.builtin.command: certbot --nginx -d {{ domain }} --agree-tos --email {{ email }} --non-interactive
      when: not cert_exists.stat.exists
      register: certbot_output
      changed_when: "'Congratulations!' in certbot_output.stdout"